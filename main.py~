import curses

# Scary ASCII Art for "Byte Scanner"
ascii_art = r"""
                      :::!~!!!!!:.
                  .xUHWH!! !!?M88WHX:.
                .X*#M@$!!  !X!M$$$$$$WWx:.
               :!!!!!!?H! :!$!$$$$$$$$$$8X:
              !!~  ~:~!! :~!$!#$$$$$$$$$$8X:
             :!~::!H!<   ~.U$X!?R$$$$$$$$MM!
             ~!~!!!!~~ .:XW$$$U!!?$$$$$$RMM!
               !:~~~ .:sᴏᴜғɪᴀɴᴇ!$WX??#MRRMMM!
               ~?WuxiW*`   `'#$ᴉɹᴉɥɐꓕ!!??!!!
             :X- M$$$$       `'T#$T~!8$WUXU~
            :%`  ~#$$$m:        ~!~ ?$$$$$$
          :!`.-   ~T$$$$8xx.  .xWW- ~''##*'
.....   -~~:<` !    ~?T#$$@@W@*?$$      /`
W$@@M!!! .!~~ !!     .:XUW$W!~ `'~:    :
#'~~`.:x%`!!  !H:   !WM$$$$Ti.: .!WUn+!`
:::~:!!`:X~ .: ?H.!u '$$$B$$$!W:U!T$$M~
.~~   :X@!.-~   ?@WTWo('*$$$W$TH$! `
Wi.~!X$?!-~    : ?$$$B$Wu('**$RM!
$R@i.~~ !     :   ~$$$$$B$$en:``
?MXT@Wx.~    :     ~'##*$$$$M~ 


                                              ___                    ___           ___           ___           ___           ___           ___           ___     
     _____                                   /\__\                  /\__\         /\__\         /\  \         /\  \         /\  \         /\__\         /\  \    
    /::\  \         ___         ___         /:/ _/_                /:/ _/_       /:/  /        /::\  \        \:\  \        \:\  \       /:/ _/_       /::\  \   
   /:/\:\  \       /|  |       /\__\       /:/ /\__\              /:/ /\  \     /:/  /        /:/\:\  \        \:\  \        \:\  \     /:/ /\__\     /:/\:\__\  
  /:/ /::\__\     |:|  |      /:/  /      /:/ /:/ _/_            /:/ /::\  \   /:/  /  ___   /:/ /::\  \   _____\:\  \   _____\:\  \   /:/ /:/ _/_   /:/ /:/  /  
 /:/_/:/\:|__|    |:|  |     /:/__/      /:/_/:/ /\__\          /:/_/:/\:\__\ /:/__/  /\__\ /:/_/:/\:\__\ /::::::::\__\ /::::::::\__\ /:/_/:/ /\__\ /:/_/:/__/___
 \:\/:/ /:/  /  __|:|__|    /::\  \      \:\/:/ /:/  /          \:\/:/ /:/  / \:\  \ /:/  / \:\/:/  \/__/ \:\~~\~~\/__/ \:\~~\~~\/__/ \:\/:/ /:/  / \:\/:::::/  /
  \::/_/:/  /  /::::\  \   /:/\:\  \      \::/_/:/  /            \::/ /:/  /   \:\  /:/  /   \::/__/       \:\  \        \:\  \        \::/_/:/  /   \::/~~/~~~~ 
   \:\/:/  /   ~~~~\:\  \  \/__\:\  \      \:\/:/  /              \/_/:/  /     \:\/:/  /     \:\  \        \:\  \        \:\  \        \:\/:/  /     \:\~~\     
    \::/  /         \:\__\      \:\__\      \::/  /                 /:/  /       \::/  /       \:\__\        \:\__\        \:\__\        \::/  /       \:\__\    
     \/__/           \/__/       \/__/       \/__/                  \/__/         \/__/         \/__/         \/__/         \/__/         \/__/         \/__/                                                       
											
											
											
										A N D  H A C K E R S  R E A L I T Y
"""

def main(stdscr):
    # Clear screen
    stdscr.clear()

    # Initialize colors
    curses.start_color()
    curses.init_pair(1, curses.COLOR_GREEN, curses.COLOR_BLACK)
    curses.init_pair(2, curses.COLOR_RED, curses.COLOR_BLACK)
    curses.init_pair(3, curses.COLOR_YELLOW, curses.COLOR_BLACK)
    curses.init_pair(4, curses.COLOR_BLACK, curses.COLOR_WHITE)

    # Print ASCII Art
    stdscr.addstr(1, 1, ascii_art, curses.color_pair(1))

    # Instructions
    stdscr.addstr(22, 1, "Enter the target IP address:", curses.color_pair(2))
    
    # Input field
    stdscr.addstr(24, 1, "Target: ", curses.color_pair(3))
    curses.echo()  # Enable echoing of input
    target_ip = stdscr.getstr(24, 9).decode('utf-8')  # Get input
    curses.noecho()  # Disable echoing of input

    # Scanning options
    stdscr.addstr(26, 1, "Choose scan type:", curses.color_pair(2))
    stdscr.addstr(27, 1, "1. TCP Connect Scan", curses.color_pair(3))
    stdscr.addstr(28, 1, "2. SYN Scan", curses.color_pair(3))
    stdscr.addstr(29, 1, "3. UDP Scan", curses.color_pair(3))
    stdscr.addstr(30, 1, "4. Exit", curses.color_pair(3))

    # Get scan type
    stdscr.addstr(32, 1, "Enter your choice (1-4): ", curses.color_pair(2))
    curses.echo()
    choice = stdscr.getstr(32, 30).decode('utf-8')
    curses.noecho()

    # Process the choice
    if choice in ['1', '2', '3']:
        stdscr.addstr(34, 1, f"Starting scan on {target_ip} using {'TCP Connect' if choice == '1' else 'SYN' if choice == '2' else 'UDP'}...", curses.color_pair(4))
    elif choice == '4':
        stdscr.addstr(34, 1, "Exiting... Goodbye!", curses.color_pair(4))
    else:
        stdscr.addstr(34, 1, "Invalid choice! Please try again.", curses.color_pair(4))

    stdscr.refresh()
    stdscr.getch()  # Wait for a key press

curses.wrapper(main)
